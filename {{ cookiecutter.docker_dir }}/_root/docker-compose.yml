version: '3.7'
services:
  caddy:
    container_name: {{ cookiecutter.project_slug }}_caddy
    build: ./docker/caddy
    env_file:
      - ./docker/caddy/.env
    volumes:
      - ./docker/caddy/conf:/srv/caddy:cached
      - ./docker/.dev/.caddy:/root/.caddy:delegated
      - ./docker/.dev/certs:/srv/certs:cached
      - ./media:/srv/www/media:cached
    ports:
      - "80:80/tcp"
      - "443:443/tcp"

  postgres:
    container_name: {{ cookiecutter.project_slug }}_postgres
    image: postgres:{{ cookiecutter.postgres_version }}-alpine
    env_file:
      - ./docker/postgres/.env
    volumes:
      - postgres_data.devel:/var/lib/postgresql/data
    ports:
      - "5432:5432/tcp"

  django:
    container_name: {{ cookiecutter.project_slug }}_django
    build:
      context: ./
      dockerfile: docker/django/Dockerfile
    env_file:
      - ./.env
      - ./docker/django/.env
    volumes:
      - ./:/srv/app:cached
      # Keep virtual environment out of Docker.
      - /srv/app/.venv
    ports:
      - "8000:8000/tcp"
    stdin_open: true
    tty: true

  webpack:
    container_name: {{ cookiecutter.project_slug }}_webpack
    build:
      context: ./
      dockerfile: docker/webpack/Dockerfile
    env_file:
      - ./docker/webpack/.env
    volumes:
      - ./docker/.dev/.caddy:/root/.caddy:delegated
      - ./docker/.dev/certs:/srv/certs:cached
      - ./:/srv/app:cached
      # Keep virtual environment out of Docker.
      - /srv/app/.venv
      # Override `node_modules` to isolate it from local mount.
      - /srv/app/node_modules/
    ports:
      - "55555:55555/tcp"

  maildev:
    container_name: {{ cookiecutter.project_slug }}_maildev
    image: djfarrelly/maildev
    ports:
      - "1080:1080/tcp"
      - "1025:1025/tcp"
    command: ["bin/maildev", "--web", "1080", "--smtp", "1025"]

volumes:
  postgres_data.devel:
